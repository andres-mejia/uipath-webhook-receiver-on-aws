service: uipath-webhook-receiver

provider:
  name: aws
  runtime: python2.7
  region: ap-northeast-1
  stage: ${opt:stage, 'dev'}
  environment:
    language: ${file(config.${self:provider.stage}.json):language}
    orchestrator_url: ${file(config.${self:provider.stage}.json):orchestrator.url}
    orchestrator_tenancy_name: ${file(config.${self:provider.stage}.json):orchestrator.tenancy_name}
    orchestrator_username: ${file(config.${self:provider.stage}.json):orchestrator.username}
    orchestrator_password: ${file(config.${self:provider.stage}.json):orchestrator.password}
    orchestrator_api_key: ${file(config.$son):orchestrator.api_key}
    orchestrator_ntlm_authentication: ${file(config.${self:provider.stage}.json):orchestrator.ntlm_authentication}

plugins:
  - serverless-python-requirements

functions:
  backlog:
    handler: handler.backlog_handler
    environment:
      process_name: ${file(config.${self:provider.stage}.json):handler.backlog.process_name}
    events:
      - http:
          path: uipath-webhook-receiver/backlog
          method: post

  github:
    handler: handler.github_handler
    environment:
      secret: ${file(config.${self:provider.stage}.json):handler.github.secret}
      process_name: ${file(config.${self:provider.stage}.json):handler.github.process_name}
    events:
      - http:
          path: uipath-webhook-receiver/github
          method: post
  
  google_hagouts:
    handler: handler.google_hagouts_handler
    environment:
      available_processes: ${file(config.${self:provider.stage}.json):handler.google_hangouts.available_processes}
      token: ${file(config.${self:provider.stage}.json):handler.google_hangouts.verification_token}
    events:
      - http:
          path: uipath-webhook-receiver/google_hagouts
          method: post

  html_form:
    handler: handler.html_form_handler
    environment:
      available_processes: ${file(config.${self:provider.stage}.json):handler.html_form.available_processes}
    events:
      - http:
          path: uipath-webhook-receiver/html_form
          method: get
      - http:
          path: uipath-webhook-receiver/html_form
          method: post

  iot_button:
    handler: handler.iot_button_handler

  orchestrator:
    handler: handler.orchestrator_handler
    environment:
      secret: ${file(config.${self:provider.stage}.json):handler.orchestrator.secret}
      process_name: ${file(config.${self:provider.stage}.json):handler.orchestrator.process_name}
    events:
      - http:
          path: uipath-webhook-receiver/orchestrator
          method: post

  slack:
    handler: handler.slack_handler
    environment:
      verification_token: ${file(config.${self:provider.stage}.json):handler.slack.verification_token}
      available_processes: ${file(config.${self:provider.stage}.json):handler.slack.available_processes}
    events:
      - http:
          path: uipath-webhook-receiver/slack
          method: post

  wrike:
    handler: handler.wrike_handler
    environment:
      secret: ${file(config.${self:provider.stage}.json):handler.wrike.secret}
      process_name: ${file(config.${self:provider.stage}.json):handler.wrike.process_name}
    events:
      - http:
          path: uipath-webhook-receiver/wrike
          method: post